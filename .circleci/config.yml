version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test-python-install:
          version: "3.6"
          requires:
            - build
      - test-python-install:
          version: "3.7"
          requires:
            - build
      # don't test python 3.8 since we are already (build)
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
jobs:
  build:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pytest pytest-cov codecov black
            pip install -r requirements.txt
            pip install -e .
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest hyppo/
            black --check --diff ./hyppo
            codecov
      - store_artifacts:
          path: htmlcov/
  test-python-install:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: cimg/python:<< parameters.version >>
    steps:
      - checkout
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pytest pytest-cov codecov black
            pip install numpy==1.17
            pip install scipy==1.4.0
            pip install numba==0.46
            pip install scikit-learn==0.19.1
            pip install -e .
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest hyppo/
            black --check --diff ./hyppo
            codecov
      - store_artifacts:
          path: htmlcov/
      - run:
          name: Smoke Test Install
          command: |
            python --version
            sudo pip install hyppo
  integration:
    docker:
      - image: cimg/python:3.8
    steps:
      - run: echo "It works!"
  deploy:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -e .
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            python setup.py sdist
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*